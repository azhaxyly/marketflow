services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER:     ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB:       ${PG_DB}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_DB:       "${REDIS_DB}"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  exchange1:
    build:
      context: ./data
      dockerfile: Dockerfile.exchange1
    ports:
      - "40101:40101"

  exchange2:
    build:
      context: ./data
      dockerfile: Dockerfile.exchange2
    ports:
      - "40102:40102"

  exchange3:
    build:
      context: ./data
      dockerfile: Dockerfile.exchange3
    ports:
      - "40103:40103"

  marketflow:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      exchange1:
        condition: service_started
      exchange2:
        condition: service_started
      exchange3:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8080:8080"

volumes:
  pgdata:
  redisdata:
